<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/data/jpa https://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:annotation-config/>
    <context:component-scan base-package="hu.neuron.mentoring"/>
    <jpa:repositories base-package="hu.neuron.mentoring.core.repositories">

    </jpa:repositories>
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="ProductPU"/>

    </bean>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
    <bean id="userDetailsService" class="hu.neuron.mentoring.core.securityConfig.MyUserDetailsService"/>
    <bean id="authenticationEventListener" class="hu.neuron.mentoring.web.listeners.AuthenticationEventListener"/>
    <bean id="authenticationFailureListener" class="hu.neuron.mentoring.web.listeners.AuthenticationFailureListener"/>
    <bean id="productService" class="hu.neuron.mentoring.core.service.ProductServiceImpl"/>
    <bean id="monetizationService" class="hu.neuron.mentoring.core.service.MonetizationServiceImpl"/>
    <bean id="categoryService" class="hu.neuron.mentoring.core.service.CategoryServceImpl"/>
    <bean id="unitService" class="hu.neuron.mentoring.core.service.UnitServiceImpl"/>
    <bean id="userService" class="hu.neuron.mentoring.core.service.UserServiceImpl"/>
    <bean id="roleService" class="hu.neuron.mentoring.core.service.RoleServiceImpl"/>
    <bean id="productDAO" class="hu.neuron.mentoring.core.dao.ProductDAO"/>
    <bean id="monetizationDAO" class="hu.neuron.mentoring.core.dao.MonetizationDAO"/>
    <bean id="categoryDAO" class="hu.neuron.mentoring.core.dao.CategoryDAO"/>
    <bean id="unitDAO" class="hu.neuron.mentoring.core.dao.UnitDAO"/>
    <bean id="userDAO" class="hu.neuron.mentoring.core.dao.UserDAO"/>
    <bean id="roleDAO" class="hu.neuron.mentoring.core.dao.RoleDAO"/>
    <bean lazy-init="true" id="productBean" class="hu.neuron.mentoring.web.beans.ProductBean"/>
    <bean lazy-init="true" id="localeBean" class="hu.neuron.mentoring.web.beans.LocaleBean"/>
    <bean lazy-init="true" id="formProcessBean" class="hu.neuron.mentoring.web.beans.FormProcessBean"/>
    <bean lazy-init="true" id="userLoginBean" class="hu.neuron.mentoring.web.beans.UserLoginBean"/>
    <bean lazy-init="true" id="userBean" class="hu.neuron.mentoring.web.beans.UserBean"/>
    <bean lazy-init="true" id="monetizationBean" class="hu.neuron.mentoring.web.beans.MonetizationBean"/>
</beans>
